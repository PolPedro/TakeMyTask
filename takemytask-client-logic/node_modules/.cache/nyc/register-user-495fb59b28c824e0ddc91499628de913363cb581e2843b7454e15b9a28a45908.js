function cov_24dgl9vm2g(){var path="C:\\Users\\polpe\\bootcamp\\collab\\skylab-bootcamp-202004\\staff\\pol-pedro\\takemytask\\takemytask-client-logic\\register-user.js";var hash="a4ce17cc71dbfb617bfc4c02066f81b751d6439e";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"C:\\Users\\polpe\\bootcamp\\collab\\skylab-bootcamp-202004\\staff\\pol-pedro\\takemytask\\takemytask-client-logic\\register-user.js",statementMap:{"0":{start:{line:1,column:0},end:{line:1,column:46}},"1":{start:{line:3,column:34},end:{line:3,column:63}},"2":{start:{line:4,column:16},end:{line:4,column:36}},"3":{start:{line:21,column:0},end:{line:41,column:15}},"4":{start:{line:22,column:4},end:{line:22,column:33}},"5":{start:{line:23,column:4},end:{line:23,column:36}},"6":{start:{line:24,column:4},end:{line:24,column:34}},"7":{start:{line:25,column:4},end:{line:25,column:25}},"8":{start:{line:26,column:4},end:{line:26,column:37}},"9":{start:{line:28,column:7},end:{line:40,column:14}},"10":{start:{line:35,column:16},end:{line:35,column:42}},"11":{start:{line:35,column:36},end:{line:35,column:42}},"12":{start:{line:37,column:34},end:{line:37,column:50}},"13":{start:{line:39,column:16},end:{line:39,column:39}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:21,column:17},end:{line:21,column:18}},loc:{start:{line:21,column:67},end:{line:41,column:1}},line:21},"1":{name:"(anonymous_1)",decl:{start:{line:33,column:19},end:{line:33,column:20}},loc:{start:{line:33,column:39},end:{line:40,column:13}},line:33}},branchMap:{"0":{loc:{start:{line:35,column:16},end:{line:35,column:42}},type:"if",locations:[{start:{line:35,column:16},end:{line:35,column:42}},{start:{line:35,column:16},end:{line:35,column:42}}],line:35}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},f:{"0":0,"1":0},b:{"0":[0,0]},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"a4ce17cc71dbfb617bfc4c02066f81b751d6439e"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_24dgl9vm2g=function(){return actualCoverage;};}return actualCoverage;}cov_24dgl9vm2g();cov_24dgl9vm2g().s[0]++;require('takemytask-commons/polyfills/string');const{utils:{Email,call}}=(cov_24dgl9vm2g().s[1]++,require('takemytask-commons'));const context=(cov_24dgl9vm2g().s[2]++,require('./context'));/**
 * calls  the api to register a user with the given name surname ...
 *
 * @param {string} name users name
 * @param {string} surname users surname 
 * @param {string} email users email
 * @param {string} password users password
 * @param {string} adress users adress
 * 
 * @returns {undefined}
 *
 * @throws {Error} if server throws errror
 */cov_24dgl9vm2g().s[3]++;module.exports=function(name,surname,email,password,adress){cov_24dgl9vm2g().f[0]++;cov_24dgl9vm2g().s[4]++;String.validate.notVoid(name);cov_24dgl9vm2g().s[5]++;String.validate.notVoid(surname);cov_24dgl9vm2g().s[6]++;String.validate.notVoid(email);cov_24dgl9vm2g().s[7]++;Email.validate(email);cov_24dgl9vm2g().s[8]++;String.validate.notVoid(password);cov_24dgl9vm2g().s[9]++;return call('POST',`${this.API_URL}/users`,`{"name":"${name}", "surname":"${surname}", "email":"${email}", "password":"${password}", "adress":"${adress}"}`,{'Content-Type':'application/json'}).then(({status,body})=>{cov_24dgl9vm2g().f[1]++;cov_24dgl9vm2g().s[10]++;if(status===201){cov_24dgl9vm2g().b[0][0]++;cov_24dgl9vm2g().s[11]++;return;}else{cov_24dgl9vm2g().b[0][1]++;}const{error}=(cov_24dgl9vm2g().s[12]++,JSON.parse(body));cov_24dgl9vm2g().s[13]++;throw new Error(error);});}.bind(context);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlZ2lzdGVyLXVzZXIuanMiXSwibmFtZXMiOlsicmVxdWlyZSIsInV0aWxzIiwiRW1haWwiLCJjYWxsIiwiY29udGV4dCIsIm1vZHVsZSIsImV4cG9ydHMiLCJuYW1lIiwic3VybmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJhZHJlc3MiLCJTdHJpbmciLCJ2YWxpZGF0ZSIsIm5vdFZvaWQiLCJBUElfVVJMIiwidGhlbiIsInN0YXR1cyIsImJvZHkiLCJlcnJvciIsIkpTT04iLCJwYXJzZSIsIkVycm9yIiwiYmluZCJdLCJtYXBwaW5ncyI6IitrRUFlWTttSEFmWkEsT0FBTyxDQUFDLHFDQUFELENBQVAsQ0FFQSxLQUFNLENBQUVDLEtBQUssQ0FBRSxDQUFFQyxLQUFGLENBQVNDLElBQVQsQ0FBVCwyQkFBNEJILE9BQU8sQ0FBQyxvQkFBRCxDQUFuQyxDQUFOLENBQ0EsS0FBTUksQ0FBQUEsT0FBTywwQkFBR0osT0FBTyxDQUFDLFdBQUQsQ0FBVixDQUFiLENBRUE7Ozs7Ozs7Ozs7OzsyQkFlQUssTUFBTSxDQUFDQyxPQUFQLENBQWlCLFNBQVVDLElBQVYsQ0FBZ0JDLE9BQWhCLENBQXlCQyxLQUF6QixDQUFnQ0MsUUFBaEMsQ0FBMENDLE1BQTFDLENBQWtELGlEQUMvREMsTUFBTSxDQUFDQyxRQUFQLENBQWdCQyxPQUFoQixDQUF3QlAsSUFBeEIsRUFEK0Qsd0JBRS9ESyxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLE9BQWhCLENBQXdCTixPQUF4QixFQUYrRCx3QkFHL0RJLE1BQU0sQ0FBQ0MsUUFBUCxDQUFnQkMsT0FBaEIsQ0FBd0JMLEtBQXhCLEVBSCtELHdCQUkvRFAsS0FBSyxDQUFDVyxRQUFOLENBQWVKLEtBQWYsRUFKK0Qsd0JBSy9ERyxNQUFNLENBQUNDLFFBQVAsQ0FBZ0JDLE9BQWhCLENBQXdCSixRQUF4QixFQUwrRCx3QkFPNUQsTUFBT1AsQ0FBQUEsSUFBSSxDQUNWLE1BRFUsQ0FFVCxHQUFFLEtBQUtZLE9BQVEsUUFGTixDQUdULFlBQVdSLElBQUssaUJBQWdCQyxPQUFRLGVBQWNDLEtBQU0sa0JBQWlCQyxRQUFTLGdCQUFlQyxNQUFPLElBSG5HLENBSU4sQ0FBQyxlQUFlLGtCQUFoQixDQUpNLENBQUosQ0FLREssSUFMQyxDQUtLLENBQUMsQ0FBQ0MsTUFBRCxDQUFTQyxJQUFULENBQUQsR0FBb0Isa0RBRXZCLEdBQUlELE1BQU0sR0FBSyxHQUFmLENBQW9CLDREQUFNLENBQTFCLGlDQUVBLEtBQU0sQ0FBRUUsS0FBRiw0QkFBWUMsSUFBSSxDQUFDQyxLQUFMLENBQVdILElBQVgsQ0FBWixDQUFOLENBSnVCLHlCQU12QixLQUFNLElBQUlJLENBQUFBLEtBQUosQ0FBV0gsS0FBWCxDQUFOLENBQ0gsQ0FaQyxDQUFQLENBYU4sQ0FwQmdCLENBb0JmSSxJQXBCZSxDQW9CVm5CLE9BcEJVLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgndGFrZW15dGFzay1jb21tb25zL3BvbHlmaWxscy9zdHJpbmcnKVxyXG5cclxuY29uc3QgeyB1dGlsczogeyBFbWFpbCwgY2FsbCB9fSA9IHJlcXVpcmUoJ3Rha2VteXRhc2stY29tbW9ucycpXHJcbmNvbnN0IGNvbnRleHQgPSByZXF1aXJlKCcuL2NvbnRleHQnKVxyXG5cclxuLyoqXHJcbiAqIGNhbGxzICB0aGUgYXBpIHRvIHJlZ2lzdGVyIGEgdXNlciB3aXRoIHRoZSBnaXZlbiBuYW1lIHN1cm5hbWUgLi4uXHJcbiAqXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBuYW1lIHVzZXJzIG5hbWVcclxuICogQHBhcmFtIHtzdHJpbmd9IHN1cm5hbWUgdXNlcnMgc3VybmFtZSBcclxuICogQHBhcmFtIHtzdHJpbmd9IGVtYWlsIHVzZXJzIGVtYWlsXHJcbiAqIEBwYXJhbSB7c3RyaW5nfSBwYXNzd29yZCB1c2VycyBwYXNzd29yZFxyXG4gKiBAcGFyYW0ge3N0cmluZ30gYWRyZXNzIHVzZXJzIGFkcmVzc1xyXG4gKiBcclxuICogQHJldHVybnMge3VuZGVmaW5lZH1cclxuICpcclxuICogQHRocm93cyB7RXJyb3J9IGlmIHNlcnZlciB0aHJvd3MgZXJycm9yXHJcbiAqL1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKG5hbWUsIHN1cm5hbWUsIGVtYWlsLCBwYXNzd29yZCwgYWRyZXNzKSB7XHJcbiAgICBTdHJpbmcudmFsaWRhdGUubm90Vm9pZChuYW1lKVxyXG4gICAgU3RyaW5nLnZhbGlkYXRlLm5vdFZvaWQoc3VybmFtZSlcclxuICAgIFN0cmluZy52YWxpZGF0ZS5ub3RWb2lkKGVtYWlsKVxyXG4gICAgRW1haWwudmFsaWRhdGUoZW1haWwpXHJcbiAgICBTdHJpbmcudmFsaWRhdGUubm90Vm9pZChwYXNzd29yZClcclxuXHJcbiAgICAgICByZXR1cm4gY2FsbChcclxuICAgICAgICAnUE9TVCcsIFxyXG4gICAgICAgIGAke3RoaXMuQVBJX1VSTH0vdXNlcnNgLCBcclxuICAgICAgICBge1wibmFtZVwiOlwiJHtuYW1lfVwiLCBcInN1cm5hbWVcIjpcIiR7c3VybmFtZX1cIiwgXCJlbWFpbFwiOlwiJHtlbWFpbH1cIiwgXCJwYXNzd29yZFwiOlwiJHtwYXNzd29yZH1cIiwgXCJhZHJlc3NcIjpcIiR7YWRyZXNzfVwifWAsXHJcbiAgICAgICAgICAgIHsnQ29udGVudC1UeXBlJzonYXBwbGljYXRpb24vanNvbid9KSBcclxuICAgICAgICAgICAgLnRoZW4oICh7c3RhdHVzLCBib2R5fSkgPT4ge1xyXG4gICAgXHJcbiAgICAgICAgICAgICAgICBpZiAoc3RhdHVzID09PSAyMDEpIHJldHVybiBcclxuICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICBjb25zdCB7IGVycm9yIH0gPSBKU09OLnBhcnNlKGJvZHkpXHJcblxyXG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yIChlcnJvcilcclxuICAgICAgICAgICAgfSlcclxufS5iaW5kKGNvbnRleHQpIl19